# Generated by Django 3.2.13 on 2022-06-04 10:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Talk2meUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email address')),
                ('first_name', models.CharField(default='', max_length=255)),
                ('last_name', models.CharField(default='', max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_user_anonymous', models.BooleanField(default=False)),
                ('is_therapist', models.BooleanField(default=False)),
                ('profile_image_url', models.TextField(blank=True)),
                ('anonymous_display_name', models.CharField(blank=True, max_length=255)),
                ('user_bio', models.TextField(blank=True, max_length=300)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('therapist_number_of_sessions_per_day', models.SmallIntegerField(default=3)),
                ('therapist_schedule_days', models.CharField(choices=[('ALD', 'All days'), ('MON', 'Monday'), ('TUE', 'Tuesday'), ('WED', 'Wednesday'), ('THU', 'Thursday'), ('FRI', 'Friday'), ('SAT', 'Saturday'), ('SUN', 'Sunday')], default='ALD', max_length=3)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_access_code', models.IntegerField(auto_created=True, unique=True)),
                ('name_of_organization', models.CharField(max_length=255, unique=True)),
                ('organization_domain_url', models.URLField(max_length=255, unique=True)),
                ('organization_contact_person', models.CharField(max_length=255)),
                ('organization_contact_person_email', models.EmailField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SessionTimes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_time', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='UserAnonymousDisplayImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anonymous_display_image', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='UserCurrentFEmotionalState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_emotional_state', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='UserEmotions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emotions', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='UserEmotionsTriggers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('triggers', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='UserGoals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goals', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfileCoverImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_cover_image', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='UserSocialUrls',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facebook', models.CharField(default='', max_length=255)),
                ('linkedin', models.CharField(default='', max_length=255)),
                ('twitter', models.CharField(default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='TherapySessions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_date', models.DateField()),
                ('number_of_sessions', models.SmallIntegerField()),
                ('session_users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='talk2meuser',
            name='anonymous_profile_image_url',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.useranonymousdisplayimage'),
        ),
        migrations.AddField(
            model_name='talk2meuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='talk2meuser',
            name='profile_cover_image_url',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.userprofilecoverimage'),
        ),
        migrations.AddField(
            model_name='talk2meuser',
            name='therapist_time_slots_available',
            field=models.ManyToManyField(to='core.SessionTimes'),
        ),
        migrations.AddField(
            model_name='talk2meuser',
            name='user_current_emotional_state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.usercurrentfemotionalstate'),
        ),
        migrations.AddField(
            model_name='talk2meuser',
            name='user_emotions',
            field=models.ManyToManyField(to='core.UserEmotions'),
        ),
        migrations.AddField(
            model_name='talk2meuser',
            name='user_emotions_triggers',
            field=models.ManyToManyField(to='core.UserEmotionsTriggers'),
        ),
        migrations.AddField(
            model_name='talk2meuser',
            name='user_goals',
            field=models.ManyToManyField(to='core.UserGoals'),
        ),
        migrations.AddField(
            model_name='talk2meuser',
            name='user_organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.organization'),
        ),
        migrations.AddField(
            model_name='talk2meuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='talk2meuser',
            name='user_social_urls',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.usersocialurls'),
        ),
    ]
